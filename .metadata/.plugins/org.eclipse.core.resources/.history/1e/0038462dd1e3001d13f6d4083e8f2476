package com.forum.project.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;
import com.forum.project.dao.IRubroDao;
import com.forum.project.response.RubroResponseRest;
import com.forum.project.model.Rubro;

@Service
public class RubroServiceImpl implements IRubroService{
	
	@Autowired
	private IRubroDao rubroDao;	
	Connection cn;
	String connectionUrl =
            "jdbc:sqlserver://localhost:1433;"
                    + "database=BD_NEOCON;"
                    + "user=sa;"
                    + "password=abril.2023;"
                    + "encrypt=true;"
                    + "trustServerCertificate=true;"
                    + "loginTimeout=30;";


	@Override
	public ResponseEntity<RubroResponseRest> search() {

		RubroResponseRest response = new RubroResponseRest();
		List<Rubro> rubro = new ArrayList<Rubro>();
		
		
		try {
			cn = DriverManager.getConnection(connectionUrl);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			// Llamada al procedimiento almacenado
            PreparedStatement cst = cn.prepareCall("{ SP_ALL_RUBROS() }");
            // Ejecuta el procedimiento almacenado
            cst.executeQuery();
            // Se obtienen la salida del procedimineto almacenado

            
			
			List<Rubro> rubro = cst.;
			
			response.getRubroResponse().setRubro(rubro);
			response.setMetadata("Respuesta ok", "00", "Respuesta exitosa");
			
		} catch(Exception e) {
			
			response.setMetadata("Respuesta no ok", "-1", "Error al no consultar");
			e.getStackTrace();
			return new ResponseEntity<RubroResponseRest>(response, HttpStatus.INTERNAL_SERVER_ERROR);
			
		}
		
		return new ResponseEntity<RubroResponseRest>(response, HttpStatus.OK);
		
	}

}
